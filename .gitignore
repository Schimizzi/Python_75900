# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Usually these files are written by a python script from a template
# before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# PEP 582; __pypackages__ directory
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments tools
.pyenv-virtualenv-root

# Pyflow
pyflow.lock

# Poetry
poetry.lock

# IDE configuration files
.vscode/
.idea/
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw? # Vim swap files

# --- Archivos específicos de TU proyecto ---

# Opción 1: Si NO quieres subir los archivos JSON de datos
# (porque se generan o modifican localmente y no quieres versionar los cambios)
# Descomenta la siguiente línea:
# data/

# Opción 2: Si SÍ quieres subir la versión inicial de los JSON pero ignorar cambios futuros
# (esto es más avanzado, requiere `git update-index --assume-unchanged data/data_clientes.json`)
# Por ahora, es más simple decidir si los subes o no con la Opción 1.

# Si tienes otros archivos temporales o logs que genera tu script, añádelos aquí.
# Por ejemplo:
# *.log
# temp_files/